#Stock_portfolio_tracker
import requests

class StockPortfolio:
    def __init__(self):
        self.portfolio = {}

    def add_stock(self, symbol, shares, price):
        self.portfolio[symbol] = self.portfolio.get(symbol, 0) + shares
        print(f"Added {shares} shares of {symbol} at ${price} each.")

    def remove_stock(self, symbol, shares):
        if symbol in self.portfolio and self.portfolio[symbol] >= shares:
            self.portfolio[symbol] -= shares
            if self.portfolio[symbol] == 0:
                del self.portfolio[symbol]
            print(f"Removed {shares} shares of {symbol}.")
        else:
            print(f"Not enough shares of {symbol} to remove.")

    def show_portfolio(self):
        print("\nCurrent Portfolio:")
        for symbol, shares in self.portfolio.items():
            print(f"{symbol}: {shares} shares")
        print()

def main():
    portfolio = StockPortfolio()
    while True:
        choice = input("\n1. Add Stock  2. Remove Stock  3. View Portfolio  4. Exit\nChoose: ")
        if choice == '1':
            portfolio.add_stock(input("Stock Symbol: ").upper(), int(input("Shares: ")), float(input("Price: ")))
        elif choice == '2':
            portfolio.remove_stock(input("Stock Symbol: ").upper(), int(input("Shares to Remove: ")))
        elif choice == '3':
            portfolio.show_portfolio()
        elif choice == '4':
            break
        else:
            print("Invalid choice, try again.")

if __name__ == "__main__":
    main()
